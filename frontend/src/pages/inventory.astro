---
/**
 * Inventory Dashboard Page
 * Comprehensive view of all store stock levels with restock tracking
 */
import MainLayout from '../layouts/MainLayout.astro';
import StatCard from '../components/StatCard';
import InventoryDashboard from '../components/InventoryDashboard';

import {
  mockInventoryItems,
  mockInventoryDashboardStats,
  mockRestockSuggestions,
} from '../utils/mockInventoryData';

// Extract unique regions
const uniqueRegions = Array.from(
  new Set(mockInventoryItems.map(item => item.location?.region).filter(Boolean))
) as string[];

// Format currency
const formatCurrency = (amount: number): string => {
  return new Intl.NumberFormat('en-AU', {
    style: 'currency',
    currency: 'AUD',
    minimumFractionDigits: 2,
  }).format(amount);
};

// Calculate stores needing to restock this week
const today = new Date();
const nextWeek = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);
const restockThisWeek = mockInventoryItems.filter(item => {
  if (!item.next_restock_date) return false;
  const nextDate = new Date(item.next_restock_date);
  return nextDate >= today && nextDate <= nextWeek;
}).length;
---

<MainLayout title="Inventory Dashboard" currentPage="inventory">
  <!-- Page Header -->
  <div class="mb-8">
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-3xl font-bold text-gray-900 mb-2">
          📦 Inventory Management
        </h1>
        <p class="text-sm text-gray-600">
          Real-time stock levels across all locations with automated restock tracking
        </p>
      </div>
      <div class="flex space-x-3">
        <a
          href="/transfers/new"
          class="px-4 py-2 bg-red-600 text-white text-sm font-semibold rounded-lg hover:bg-red-700 transition-colors shadow-md"
        >
          🚚 New Transfer
        </a>
        <a
          href="/alerts/pending"
          class="px-4 py-2 bg-white border border-gray-300 text-gray-700 text-sm font-semibold rounded-lg hover:bg-gray-50 transition-colors"
        >
          📱 View Alerts ({mockRestockSuggestions.length})
        </a>
      </div>
    </div>
  </div>

  <!-- Dashboard Statistics -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4 mb-8">
    <StatCard
      client:load
      icon="📦"
      label="Total Units"
      value={mockInventoryDashboardStats.total_units.toString()}
      subtext="Across all stores"
      color="blue"
    />

    <StatCard
      client:load
      icon="💰"
      label="Total Value"
      value={formatCurrency(mockInventoryDashboardStats.total_value)}
      subtext={`Revenue: ${formatCurrency(mockInventoryDashboardStats.total_potential_revenue)}`}
      color="green"
    />

    <StatCard
      client:load
      icon="🚨"
      label="Critical Stores"
      value={mockInventoryDashboardStats.critical_stores.toString()}
      subtext="Urgent restock needed"
      color="red"
    />

    <StatCard
      client:load
      icon="⚠️"
      label="Low Stock"
      value={mockInventoryDashboardStats.low_stock_stores.toString()}
      subtext="Below minimum"
      color="yellow"
    />

    <StatCard
      client:load
      icon="🔔"
      label="Restock This Week"
      value={restockThisWeek.toString()}
      subtext={`${mockInventoryDashboardStats.restock_overdue} overdue`}
      color="yellow"
    />
  </div>

  <!-- Quick Insights -->
  <div class="bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg border border-blue-200 p-4 mb-6">
    <div class="flex items-start space-x-3">
      <span class="text-2xl">💡</span>
      <div class="flex-1">
        <h3 class="text-sm font-bold text-blue-900 mb-1">Quick Insights</h3>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-blue-800">
          <div>
            <span class="font-semibold">Average Stock Level:</span>
            <span class="ml-1">{mockInventoryDashboardStats.average_stock_percentage.toFixed(1)}%</span>
          </div>
          <div>
            <span class="font-semibold">Total Profit Potential:</span>
            <span class="ml-1 font-bold text-green-700">{formatCurrency(mockInventoryDashboardStats.total_profit_potential)}</span>
          </div>
          <div>
            <span class="font-semibold">Healthy Stores:</span>
            <span class="ml-1">{mockInventoryDashboardStats.healthy_stores} of {mockInventoryItems.length}</span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Restock Suggestions -->
  {mockRestockSuggestions.length > 0 && (
    <div class="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
      <div class="flex items-start space-x-3">
        <span class="text-2xl">🚚</span>
        <div class="flex-1">
          <h3 class="text-sm font-bold text-red-900 mb-2">Restock Suggestions</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
            {mockRestockSuggestions.slice(0, 6).map((suggestion) => (
              <div class="bg-white rounded-lg p-3 border border-red-200">
                <div class="flex items-center justify-between mb-2">
                  <span class="text-sm font-semibold text-gray-900">{suggestion.location_name}</span>
                  <span class={`text-xs font-bold px-2 py-0.5 rounded ${
                    suggestion.urgency === 'critical' ? 'bg-red-200 text-red-900' :
                    suggestion.urgency === 'high' ? 'bg-orange-200 text-orange-900' :
                    suggestion.urgency === 'medium' ? 'bg-yellow-200 text-yellow-900' :
                    'bg-blue-200 text-blue-900'
                  }`}>
                    {suggestion.urgency.toUpperCase()}
                  </span>
                </div>
                <div class="text-xs text-gray-600 space-y-1">
                  <div class="flex justify-between">
                    <span>Current:</span>
                    <span class="font-semibold text-red-600">{suggestion.current_stock} units</span>
                  </div>
                  <div class="flex justify-between">
                    <span>Ideal:</span>
                    <span class="font-semibold">{suggestion.ideal_stock} units</span>
                  </div>
                  <div class="flex justify-between border-t pt-1">
                    <span class="font-bold">Suggest:</span>
                    <span class="font-bold text-green-600">{suggestion.suggested_qty} units</span>
                  </div>
                  <p class="text-xs text-gray-500 italic mt-1">{suggestion.suggestion_reason}</p>
                </div>
              </div>
            ))}
          </div>
          {mockRestockSuggestions.length > 6 && (
            <p class="text-xs text-red-700 mt-3">
              + {mockRestockSuggestions.length - 6} more stores need restocking
            </p>
          )}
        </div>
      </div>
    </div>
  )}

  <!-- Inventory Dashboard with Filters and Table -->
  <InventoryDashboard
    client:load
    inventoryItems={mockInventoryItems}
    regions={uniqueRegions}
  />

  <!-- Help Section -->
  <div class="mt-8 bg-gray-50 rounded-lg border border-gray-200 p-6">
    <h3 class="text-sm font-bold text-gray-900 mb-3">
      📖 Restock Logic Explained
    </h3>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-700">
      <div>
        <h4 class="font-semibold text-gray-900 mb-1">🚨 Critical Status</h4>
        <p>Stock level ≤ 50% of minimum stock. <strong>Immediate action required.</strong></p>
      </div>
      <div>
        <h4 class="font-semibold text-gray-900 mb-1">⚠️ Low Stock</h4>
        <p>Stock level ≤ minimum stock OR restock date overdue. <strong>Restock soon.</strong></p>
      </div>
      <div>
        <h4 class="font-semibold text-gray-900 mb-1">📅 Date Due Trigger</h4>
        <p>Today ≥ Last Restock Date + Cycle Days (default 21). Time for scheduled restock.</p>
      </div>
      <div>
        <h4 class="font-semibold text-gray-900 mb-1">📉 Stock Low Trigger</h4>
        <p>Current stock ≤ Minimum stock threshold. Stock running low.</p>
      </div>
      <div>
        <h4 class="font-semibold text-gray-900 mb-1">💡 Suggested Quantity</h4>
        <p>MAX(Deficit from Ideal, Projected Sales). Calculated to bring stock to ideal level or cover next cycle.</p>
      </div>
      <div>
        <h4 class="font-semibold text-gray-900 mb-1">🎯 Ideal Stock</h4>
        <p>Default 80% of maximum capacity. Optimizes space while preventing stockouts.</p>
      </div>
    </div>
  </div>
</MainLayout>
